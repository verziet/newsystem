;; link containing all keys and their definitions
;; https://github.com/jtroo/kanata/blob/main/parser/src/keys/mod.rs

(defcfg
  danger-enable-cmd yes ;; enable commands
  process-unmapped-keys yes ;; keys undefined in defsrc will be processed
  block-unmapped-keys yes ;; keys undefined in defsrc will be blocked
)

;; all keys we're mapping
(defsrc
  `    1    2    3    4    5    6    7    8    9    0    -    =
  ⭾    q    w    e    r    t    y    u    i    o    p    [    ]    \
  ⇪    a    s    d    f    g    h    j    k    l    ;    '    ↩
  ‹⇧   z    x    c    v    b    n    m    ,    .    /
                             ␣
)

;; function for smoother typing with home row mods
;; https://github.com/jtroo/kanata/discussions/1455
(deftemplate charmod (char mod)
  (switch
    ((key-timing 3 less-than 250)) $char break
      () (tap-hold-release-timeout 250 500 $char $mod $mod) break
  )
)

;;(deflocalkeys-linux
;;  mic 248
;;)

;; aliases
(defalias
  ;; home-row mods
  a (t! charmod a lmet)
  s (t! charmod s lalt)
  d (t! charmod d lsft)
  f (t! charmod f rctl)

  j (t! charmod j rctl)
  k (t! charmod k rsft)
  l (t! charmod l ralt)
  ; (t! charmod ; rmet)

  ;; second layer toggle
  ␣ (t! charmod spc (layer-toggle layer-1))

  ;; multimedia/commands
  ◀◀ (tap-hold 0 250 (cmd playerctl position 5-) (cmd playerctl previous)) ;; seek 5 seconds backwards when pressed, previous media when held
  ▶⏸ (cmd playerctl play-pause) ;; play/pause media
  ▶▶ (tap-hold 0 250 (cmd playerctl position 5+) (cmd playerctl next)) ;; seek 5 seconds forward when pressed, next media when held 

  🔉 (tap-hold 0 250 (cmd wpctl set-volume @DEFAULT_AUDIO_SINK@ 10%- -l 1) (macro-repeat (cmd wpctl set-volume @DEFAULT_AUDIO_SINK@ 1%- -l 1) 10)) ;; decrease volume by 10% when pressed, decrease by 1% recursively when held
  🔇 (cmd wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle) ;; toggle mute
  🔊 (tap-hold 0 250 (cmd wpctl set-volume @DEFAULT_AUDIO_SINK@ 10%+ -l 1) (macro-repeat (cmd wpctl set-volume @DEFAULT_AUDIO_SINK@ 1%+ -l 1) 10)) ;; increase volume by 10% when pressed, increase by 1% recursively when held

  🔅 (tap-hold 0 250 (cmd brightnessctl s 10%- -n 1) (macro-repeat (cmd brightnessctl s 1%- -n 1) 10)) ;; decrease brightness by 10% when pressed, decrease by 1% recursively when held
  🔆 (tap-hold 0 250 (cmd brightnessctl s 10%+ -n 1) (macro-repeat (cmd brightnessctl s 1%+ -n 1) 10)) ;; increase brightness by 10% when pressed, increase by 1% recursively when held
)

;; main/default layer
(deflayer (layer-0)
  `    1    2    3    4    5    6    7    8    9    0    -    =
  ⭾    q    w    e    r    t    y    u    i    o    p    [    ]    \
  ⎋   @a   @s   @d   @f    g    h   @j   @k   @l   @;    '    ↩
  ‹⇧   z    x    c    v    b    n    m    ,    .    /
                          @␣
)

;; second layer, activated by holding the spacebar
(deflayer (layer-1)
  `    1    2    3    4    5    6    7    8    9    0    -    =
  ⭾   @🔇  @◀◀  @▶⏸  @▶▶  @🔊   y    ↖    ↘   @🔅  @🔆   [    ]    \
  ⎋    @a   @s   @d   @f  @🔉   ◀    ▼    ▲    ▶    ;    '    ↩
  ‹⇧   z    x    c    v    b    ⌫    ⌦    ,    .    /
                          @␣
)
